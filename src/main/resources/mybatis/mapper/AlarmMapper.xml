<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitedu.bipa.simplesignalarm.mapper.AlarmMapper">

    <!--알림삽입-->
    <insert id="insertAlarm" parameterType="AlarmReqDTO">
        insert into alarm_history
        (alarm_date, confirmation_status, alarm_code, org_user_id, approval_doc_id, position_name, grade_name, alarm_content, approver_id)
        values(#{alarmDate}, 0, #{alarmCode}, #{orgUserId},  #{approvalDocId}, #{positionName}, #{gradeName},#{alarmContent}, #{approverId});
    </insert>

    <select id="selectDefaultMessage" parameterType="String">
        select message from alarm where alarm_code = #{alarmCode}
    </select>

    <!-- 전체 알림을 들고오는 부분 -->
    <select id="alarmSelect" parameterType="int" resultType="AlarmDTO">
        select h.alarm_id, h.alarm_date, h.confirmation_status, h.alarm_code, h.approval_doc_id, h.alarm_content,
        d.approval_doc_title, h.org_user_id
        from alarm_history h
        join approval_doc d on h.approval_doc_id = d.approval_doc_id
        where h.org_user_id = #{orgUserId}
        order by h.alarm_id desc;
    </select>

    <!-- 문서명 들고 오기 -->
    <select id="selectApprovalDocTitle" resultType="UserApprovalDTO">
        select d.approval_doc_title, h.alarm_id from alarm_history h
        join approval_doc d on h.approval_doc_id = d.approval_doc_id
        where h.alarm_date = #{alarmDate} and h.org_user_id = #{orgUserId}
        and h.alarm_code = #{alarmCode} and h.approval_doc_id = #{approvalDocId};
    </select>

    <!-- 실시간 결재자 -->
    <select id="selectApprovalUser" parameterType="int" resultType="String">
        select u.user_name from alarm_history h
        join organization_user o on o.org_user_id = h.approver_id
        join user u on u.user_id = o.user_id
        where h.alarm_id = #{alarmId}
        order by h.alarm_id desc;
    </select>

    <!-- 안 읽은 알림 갯수 구하기 -->
    <select id="AlarmCount" parameterType="int" resultType="int">
        select count(*) from alarm_history where confirmation_status = 0 and org_user_id = #{orgUserId};
    </select>

    <!-- 알림 읽음으로 처리 -->
    <update id="updateConfirmationStatus" parameterType="int">
        update alarm_history set confirmation_status = 1 where alarm_id = #{alarmId};
    </update>

    <!-- 알림 삭제 가능하게 만들기 -->
    <select id="selectAlarmOn" parameterType="int">
        select * from alarm_history where alarm_id = #{alarmId};
    </select>
    <insert id="insertAlarmDelete" parameterType="AlarmDeleteDTO">
        insert into alarm_delete_history
        (alarm_id, alarm_date, cocnfirmation_status, alarm_code, approval_doc_id, position_name, grade_name, alarm_content, org_user_id)
        values(#{alarmId}, #{alarmDate}, #{cocnfirmationStatus}, #{alarmCode}, #{approvalDocId}, #{positionName}, #{gradeName},#{alarmContent}, #{orgUserId});
    </insert>
    <delete id="deleteAlarm" parameterType="int">
        delete from alarm_history where alarm_id = #{alarmId};
    </delete>

    <!-- 마지막 알림 아이디 찾기 -->
    <select id="maxAlarmId" parameterType="int" resultType="int">
        select max(alarm_id) from alarm_history where org_user_id = #{orgUserId};
    </select>

    <!-- 유실된 알림 들고오기 -->
    <select id="selectFailAlarm" resultType="AlarmReqDTO">
        select alarm_date, alarm_code, org_user_id, approval_doc_id, alarm_content
        from alarm_history where org_user_id = #{orgUserId} and alarm_id > #{alarmId};
    </select>
</mapper>